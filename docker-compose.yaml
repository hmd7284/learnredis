services:
  db:
    image: postgres:16
    container_name: demo_redis
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - demo-redis-data:/var/lib/postgresql/data
  redis-node-1:
    image: redis:8
    container_name: redis-node-1
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-1:/data
      - ./redis-node-1.conf:/usr/local/etc/redis/redis.conf
  redis-node-2:
    image: redis:8
    container_name: redis-node-2
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-2:/data
      - ./redis-node-2.conf:/usr/local/etc/redis/redis.conf
  redis-node-3:
    image: redis:8
    container_name: redis-node-3
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-3:/data
      - ./redis-node-3.conf:/usr/local/etc/redis/redis.conf
  redis-node-4:
    image: redis:8
    container_name: redis-node-4
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-4:/data
      - ./redis-node-4.conf:/usr/local/etc/redis/redis.conf
  redis-node-5:
    image: redis:8
    container_name: redis-node-5
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-5:/data
      - ./redis-node-5.conf:/usr/local/etc/redis/redis.conf
  redis-node-6:
    image: redis:8
    container_name: redis-node-6
    network_mode: "host"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]
    volumes:
      - redis-node-6:/data
      - ./redis-node-6.conf:/usr/local/etc/redis/redis.conf

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT
    healthcheck:
      test: [ "CMD", "nc", "-z", "127.0.0.1", "2181" ]
      interval: 5s
      timeout: 2s
      retries: 10

  kafka-broker-0:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka-broker-0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka-broker-0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    volumes:
      - kafka-broker-0:/etc/kafka

  kafka-broker-1:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka-broker-1
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093,INTERNAL://kafka-broker-1:19093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    volumes:
      - kafka-broker-1:/etc/kafka

  kafka-broker-2:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka-broker-2
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094,INTERNAL://kafka-broker-2:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper
    volumes:
      - kafka-broker-2:/etc/kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-0:19092,kafka-broker-1:19093,kafka-broker-2:19094
    ports:
      - "8090:8080"
    depends_on:
      - kafka-broker-0
      - kafka-broker-1
      - kafka-broker-2

volumes:
  demo-redis-data:
  redis-node-1:
  redis-node-2:
  redis-node-3:
  redis-node-4:
  redis-node-5:
  redis-node-6:
  kafka-broker-0:
  kafka-broker-1:
  kafka-broker-2: